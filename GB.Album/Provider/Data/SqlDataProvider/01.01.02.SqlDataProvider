
if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Vote_GetPost') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Vote_GetPost
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post_UpdateViewCount') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Post_UpdateViewCount
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post_GetAnswers') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Post_GetAnswers
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post_Delete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Post_Delete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Setting_Update') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Setting_Update
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscription_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Subscription_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscription_Delete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Subscription_Delete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscription_DeleteUserPost') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Subscription_DeleteUserPost
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscription_GetUser') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Subscription_GetUser
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_History_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_History_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_History_Get') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_History_Get
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Setting_GetPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Setting_GetPortal
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Get') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Get
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Vote_GetTerm') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Vote_GetTerm
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Replaced') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Replaced
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Delete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym_Delete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Comment_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Comment_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Comment_GetPost') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Comment_GetPost
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_Delete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_Delete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_GetByKey') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_User_Score_Log_GetByKey
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_ContentItem_GetByTypeAndCreated') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_ContentItem_GetByTypeAndCreated
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscribers_GetByContentItem') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Subscribers_GetByContentItem
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_UpdateScheduleItemSetting') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_UpdateScheduleItemSetting
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post_GetUsersLast') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GBAlbum_Post_GetUsersLast
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}vw_GBAlbum_Posts') and OBJECTPROPERTY(id, N'IsView') = 1)
	DROP VIEW {databaseOwner}{objectQualifier}vw_GBAlbum_Posts
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}vw_GBAlbum_Terms') and OBJECTPROPERTY(id, N'IsView') = 1)
	DROP VIEW {databaseOwner}{objectQualifier}vw_GBAlbum_Terms
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_User_Score_Log') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score_Log
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Taxonomy_Terms') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Taxonomy_Terms
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_Synonym') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Moderation_Log_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Moderation_Log DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Moderation_Log_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Moderation_Log') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Moderation_Log
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score DROP CONSTRAINT FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Users') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score DROP CONSTRAINT FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Users
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_User_Score') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Setting_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Setting DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Setting_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Setting') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Setting
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Comment_{objectQualifier}GBAlbum_Post') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Comment DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Comment_{objectQualifier}GBAlbum_Post
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Comment') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Comment
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Post_History_{objectQualifier}GBAlbum_Post') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Post_History DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Post_History_{objectQualifier}GBAlbum_Post
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post_History') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Post_History
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Term_History_{objectQualifier}Taxonomy_Terms') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_History DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Term_History_{objectQualifier}Taxonomy_Terms
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Term_History') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_History
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Subscription_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Subscription DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Subscription_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Subscription') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Subscription
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Vote') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Vote
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}GBAlbum_Post_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Post DROP CONSTRAINT FK_{objectQualifier}GBAlbum_Post_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}GBAlbum_Post') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}GBAlbum_Post
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Post]
(
	[PostId] [int] IDENTITY(1,1) NOT NULL,
	[Title] [nvarchar](150) NULL,
	[Body] [nvarchar](max) NOT NULL,
	[Bounty] [int] NULL,
	[ParentId] [int] NULL,
	[PortalId] [int] NOT NULL,
	[ContentItemId] [int] NULL,
	[ViewCount] [int] NULL,
	[Score] [int] NOT NULL,
	[Approved] [bit] NOT NULL,
	[ApprovedDate] [datetime] NULL,
	[Deleted] [bit] NOT NULL,
	[AnswerId] [int] NULL,
	[AnswerDate] [datetime] NULL,
	[Closed] [bit] NOT NULL,
	[ClosedDate] [datetime] NULL,
	[Protected] [bit] NOT NULL,
	[ProtectedDate] [datetime] NULL,
	[CreatedUserId] [int] NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[LastModifiedUserId] [int] NULL,
	[LastModifiedDate] [datetime] NULL
)
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Post
		WITH NOCHECK
ADD CONSTRAINT PK_{objectQualifier}GBAlbum_Post PRIMARY KEY CLUSTERED ( [PostId] )
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Post
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Post_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] ) ON DELETE CASCADE
		ON UPDATE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Vote]
(
	[VoteId] [int] IDENTITY(1,1) NOT NULL,
	[PostId] [int] NOT NULL,
	[TermId] [int] NOT NULL,
	[VoteTypeId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[CreatedByUserId] [int] NOT NULL,
	[CreatedOnDate] [datetime] NOT NULL
)
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Vote
		WITH NOCHECK
ADD CONSTRAINT PK_{objectQualifier}GBAlbum_Vote PRIMARY KEY CLUSTERED ( [VoteId] )
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Subscription]
(
	[SubscriptionId] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NULL,
	[PortalId] [int] NOT NULL,
	[EmailAddress] [nvarchar](150) NULL,
	[PostId] [int] NULL,
	[TermId] [int] NULL,
	[SubscriptionType] [int] NOT NULL,
	[CreatedOnDate] [datetime] NOT NULL,
	[LastSentOnDate] [datetime] NULL
)
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Subscription
		WITH NOCHECK
ADD CONSTRAINT PK_{objectQualifier}GBAlbum_Subscription PRIMARY KEY CLUSTERED ( [SubscriptionId] )
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Subscription
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Subscription_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] )
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Comment]
(
	[CommentId] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [int] NOT NULL,
	[PostId] [int] NOT NULL,
	[Comment] [nvarchar](max) NOT NULL,
	[CreatedOnDate] [datetime] NOT NULL
)
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Comment
		WITH NOCHECK
ADD CONSTRAINT PK_{objectQualifier}GBAlbum_Comment PRIMARY KEY CLUSTERED ( [CommentId] )
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Comment
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Comment_{objectQualifier}GBAlbum_Post FOREIGN KEY ( [PostId] ) REFERENCES {databaseOwner}{objectQualifier}GBAlbum_Post ( [PostId] )
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Term_History]
(
	[TermId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[Name] [nvarchar](250) NOT NULL,
	[Description] [nvarchar](2500) NULL,
	[Notes] [nvarchar](1000) NULL,
	[Approved] [bit] NOT NULL,
	[Revision] [int] NOT NULL,
	[RevisedByUserId] [int] NOT NULL,
	[RevisedOnDate] [datetime] NOT NULL
)
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_History
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Term_History_{objectQualifier}Taxonomy_Terms FOREIGN KEY ( [TermId] )
REFERENCES {databaseOwner}{objectQualifier}Taxonomy_Terms ( [TermID] ) 
ON DELETE CASCADE 
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Post_History]
(
	[PostId] [int] NOT NULL,
	[Title] [nvarchar](100) NULL,
	[Body] [nvarchar](max) NOT NULL,
	[Notes] [nvarchar](1000) NULL,
	[Revision] [int] NOT NULL,
	[Approved] [bit] NOT NULL,
	[RevisedByUserId] [int] NOT NULL,
	[RevisedOnDate] [datetime] NOT NULL
) 
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Post_History
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Post_History_{objectQualifier}GBAlbum_Post FOREIGN KEY ( [PostId] ) 
REFERENCES {databaseOwner}{objectQualifier}GBAlbum_Post ( [PostId] ) 
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Setting](
	[Key] [nvarchar](50) NOT NULL,
	[Value] [nvarchar](max) NOT NULL,
	[TypeId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[SettingId] [int] IDENTITY(1,1) NOT NULL
) 
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Setting
	WITH NOCHECK
	ADD CONSTRAINT PK_{objectQualifier}GBAlbum_Setting PRIMARY KEY CLUSTERED ( [SettingId] )
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Setting
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Setting_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) 
REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] ) 
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_User_Score](
	[UserId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[Score] [int] NOT NULL
) 
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) 
REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] ) 
ON DELETE CASCADE
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_User_Score
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_User_Score_{objectQualifier}Users FOREIGN KEY ( [UserId] ) 
REFERENCES {databaseOwner}{objectQualifier}Users ( [UserID] ) 
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Moderation_Log]
(
	[ModLogId] [int] IDENTITY(1,1) NOT NULL,
	[ModLogTypeId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[PostId] [int] NULL,
	[TermId] [int] NULL,
	[VoteId] [int] NULL,
	[Notes] [nvarchar](2000) NULL,
	[CreatedByUserId] [int] NOT NULL,
	[CreatedOnDate] [datetime] NOT NULL
) 
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Moderation_Log
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Moderation_Log_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) 
REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] ) 
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_Term_Synonym](
	[TermSynonymId] [int] IDENTITY(1,1) NOT NULL,
	[MasterTermId] [int] NOT NULL,
	[RelatedTermId] [int] NOT NULL,
	[Score] [int] NOT NULL,
	[ChangedCount] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[CreatedByUserId] [int] NOT NULL,
	[CreatedOnDate] [datetime] NOT NULL
) 
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Taxonomy_Terms FOREIGN KEY ( [MasterTermId] ) 
REFERENCES {databaseOwner}{objectQualifier}Taxonomy_Terms ( [TermID] ) 
ON DELETE CASCADE
GO

ALTER TABLE {databaseOwner}{objectQualifier}GBAlbum_Term_Synonym
ADD CONSTRAINT FK_{objectQualifier}GBAlbum_Term_Synonym_{objectQualifier}Portals FOREIGN KEY ( [PortalId] ) 
REFERENCES {databaseOwner}{objectQualifier}Portals ( [PortalID] ) 
ON DELETE CASCADE
GO

CREATE TABLE {databaseOwner}[{objectQualifier}GBAlbum_User_Score_Log](
	[UserId] [int] NOT NULL,
	[PortalId] [int] NOT NULL,
	[UserScoringActionId] [int] NOT NULL,
	[Score] [int] NOT NULL,
	[KeyId] [int] NULL,
	[Notes] [nvarchar](500) NULL,
	[CreatedOnDate] [datetime] NOT NULL
) 
GO

CREATE VIEW {databaseOwner}[{objectQualifier}vw_GBAlbum_Posts]
AS
	SELECT  CI.[Content] ,
			P.ContentItemID ,
			P.PostID ,
			P.Title ,
			P.Body ,
			P.Bounty ,
			P.PortalID ,
			P.ViewCount ,
			P.Approved ,
			P.AnswerID ,
			P.AnswerDate ,
			P.ClosedDate ,
			P.CreatedUserID ,
			CI.ContentTypeID ,
			CI.TabID ,
			CI.ModuleID ,
			CI.ContentKey ,
			CI.Indexed ,
			CI.CreatedByUserID ,
			CI.CreatedOnDate ,
			CI.LastModifiedByUserID ,
			CI.LastModifiedOnDate ,
			P.ApprovedDate ,
			P.Deleted ,
			P.ParentID ,
			P.Score ,
			P.Closed ,
			P.Protected ,
			P.ProtectedDate ,
			P.CreatedDate ,
			P.LastModifiedUserID ,
			P.LastModifiedDate
	FROM    {databaseOwner}{objectQualifier}ContentItems AS CI
			INNER JOIN {databaseOwner}{objectQualifier}GBAlbum_Post AS P ON CI.ContentItemID = P.ContentItemID
GO

CREATE VIEW {databaseOwner}[{objectQualifier}vw_GBAlbum_Terms]
AS
	SELECT  TT.TermID ,
			TT.Name ,
			TT.ParentTermID ,
			TT.[Description] ,
			CI.CreatedOnDate ,
			TV.Name AS VocabularyName ,
			TV.VocabularyID ,
			CI.TabID ,
			CI.ModuleID ,
			CI.ContentTypeID ,
			CI.ContentItemID ,
			T.PortalID ,
			TT.[Weight] ,
			TT.TermLeft ,
			TT.TermRight 
	FROM    {databaseOwner}{objectQualifier}Taxonomy_Vocabularies AS TV
			INNER JOIN {databaseOwner}{objectQualifier}Taxonomy_Terms AS TT ON TV.VocabularyID = TT.VocabularyID
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems_Tags AS CIT ON TT.TermID = CIT.TermID
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON CIT.ContentItemID = CI.ContentItemID
			INNER JOIN {databaseOwner}{objectQualifier}Tabs AS T ON CI.TabID = T.TabID
GO

DELETE FROM {databaseOwner}{objectQualifier}Schedule
WHERE 
	TypeFullName = 'DotNetNuke.GBAlbum.Components.Tasks.Emailer, DotNetuke.Modules.GBAlbum'
GO

INSERT INTO {databaseOwner}{objectQualifier}Schedule
	([TypeFullName], [TimeLapse], [TimeLapseMeasurement], [RetryTimeLapse], [RetryTimeLapseMeasurement], [RetainHistoryNum], [AttachToEvent], [CatchUpEnabled], [Enabled], [ObjectDependencies], [Servers], [FriendlyName])
VALUES ( 'DotNetNuke.GBAlbum.Components.Tasks.Emailer, DotNetNuke.Modules.GBAlbum', 1, 'm', -1, 'm', 10, '', 0, 1, '', null, 'Q&A Subscriptions' )
GO

